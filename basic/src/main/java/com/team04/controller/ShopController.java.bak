package com.team04.controller;

import java.util.List;

<<<<<<< HEAD
=======

>>>>>>> main
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.team04.domain.MenuVO;
import com.team04.domain.ShopVO;
import com.team04.service.MenuService;
import com.team04.service.ShopService;


// Shop(가게 테이블) Controller 
@Controller
public class ShopController {
	
	
	// ShopService내에 있는 함수를 사용하기 위한 멤버변수 선언
	@Autowired
	private ShopService shopService;
	
	// MenuService내에 있는 함수를 사용하기 위한 멤버변수 선언
	@Autowired
	private MenuService menuService;
			
	/**
	 * 요청 : shopListManager.do
	 * 메소드명 : shopListManager()
	 * 인자 : Model m (= 뷰페이지에 보내줄 값을 담을 객체)
	 * 리턴형 : String (= 뷰페이지 명)
	 * 사용 : ShopServiceImpl에 있는 함수 shopGetListManager()를 호출하여,
	 * 		받아온 List를 관리자 shopListManager 뷰페이지로 넘겨주는 함수
	 */
	@RequestMapping("shopListManager.do")
	public String shopListManager(Model m) {
		List<ShopVO> list = shopService.shopGetListManager();
		m.addAttribute("shopListManager", list);
		return "shopListManager";
	}
	
	/**
	 * 요청 : shopModifyFormManager.do
	 * 메소드명 : shopModifyFormManager()
	 * 인자 : ShopVO shopVO (= 넘어온 shopNumber(PK)를 VO에 담음), Model m (= 뷰페이지에 보내줄 값을 담을 객체)
	 * 리턴형 : String (= 뷰페이지 명)
	 * 사용 : ShopServiceImpl에 있는 함수 shopGetManager()를 호출하여,
	 * 		shopNumber(PK)에 따른 shopVO 내용을 shopModifyFormManager페이지에 출력하는 함수
	 */
	@RequestMapping(value="shopModifyFormManager.do", method=RequestMethod.GET)
	public String shopModifyFormManager(ShopVO shopVO, Model m) {
		m.addAttribute("shopManager", shopService.shopGetManager(shopVO));
		MenuVO menuVO = new MenuVO();
		menuVO.setShopNumber(shopVO.getShopNumber());
		m.addAttribute("menuListManager", menuService.menuGetListManager(menuVO));
		return "shopModifyFormManager";
	}
	
	/**
	 * 요청 : shopInsertManager.do
	 * 메소드명 : shopInsertManager()
	 * 인자 : ShopVO shopVO (= DB로 보낼 값을 자동으로 담도록 인자로 설정)
	 * 리턴형 : String (= redirect 하여 가게 리스트로 보내기 위함)
	 * 사용 : ShopServiceImpl에 있는 함수 shopInsertManager()를 호출하여,
	 * 		DB에 ShopVO에 담겨있는 내용을 shop테이블에 insert하고 shopListManager 페이지로 이동하는 함수
	 */
	@RequestMapping("shopInsertManager.do")
	public String shopInsertManager(ShopVO shopVO) {
		shopService.shopInsertManager(shopVO);
		return "redirect:shopListManager.do";
	}
	
	/**
	 * 요청 : shopDeleteManager.do
	 * 메소드명 : shopDeleteManager()
	 * 인자 : ShopVO shopVO (= 받아온 shopNumber값을 ShopVO에 저장)
	 * 리턴형 : String (= redirect 하여 가게 리스트 페이지로 보내기 위함)
	 * 사용 : ShopServiceImpl에 있는 함수 shopDeleteManager()를 호출하여,
	 * 		DB에 shopNumber가 맞는 데이터를 삭제하고, 리스트 페이지로 돌아감
	 */
	@RequestMapping(value="shopDeleteManager.do", method=RequestMethod.GET)
	public String shopDeleteManager(ShopVO shopVO) {
		// 값이 넘어오는지 확인
		System.out.println(shopVO.getShopNumber());
		
		shopService.shopDeleteManager(shopVO);
		
		return "redirect:shopListManager.do";
	}
	
	

	@RequestMapping("shopUpdateManager.do")
	public String shopUpdateManager(ShopVO shopVO) {
		
		return "";
	}

	//가게 리스트 출력
	//가게 리스트페이지에서 가게 출력
	@RequestMapping("listing.do")
	public String shopPageList(String query, ModelMap m) {
		
		List<ShopVO> list = shopService.shopPageGetList(query);
		m.addAttribute("shopPageList", list); //jsp쪽으로 보내는 키값
		return "listing";
	}

}
